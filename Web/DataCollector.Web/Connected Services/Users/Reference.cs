//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Users
{
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseTable", Namespace="http://schemas.datacontract.org/2004/07/DataCollector.Server.DataAccess.Models.En" +
        "tities")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Users.UserLoginHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Users.User))]
    public partial class BaseTable : object
    {
        
        private int IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLoginHistory", Namespace="http://schemas.datacontract.org/2004/07/DataCollector.Server.DataAccess.Models.En" +
        "tities")]
    public partial class UserLoginHistory : Users.BaseTable
    {
        
        private System.DateTime LoginTimeStampField;
        
        private System.Nullable<System.DateTime> LogoutTimeStampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LoginTimeStamp
        {
            get
            {
                return this.LoginTimeStampField;
            }
            set
            {
                this.LoginTimeStampField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LogoutTimeStamp
        {
            get
            {
                return this.LogoutTimeStampField;
            }
            set
            {
                this.LogoutTimeStampField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DataCollector.Server.DataAccess.Models.En" +
        "tities")]
    public partial class User : Users.BaseTable
    {
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string LoginField;
        
        private string PasswordField;
        
        private Users.UserRole RoleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login
        {
            get
            {
                return this.LoginField;
            }
            set
            {
                this.LoginField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Users.UserRole Role
        {
            get
            {
                return this.RoleField;
            }
            set
            {
                this.RoleField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/DataCollector.Server.DataAccess.Models")]
    public enum UserRole : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Administrator = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Viewer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSession", Namespace="http://schemas.datacontract.org/2004/07/DataCollector.Server.DataAccess.Models")]
    public partial class UserSession : object
    {
        
        private int SessionIdField;
        
        private Users.User SessionUserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionId
        {
            get
            {
                return this.SessionIdField;
            }
            set
            {
                this.SessionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Users.User SessionUser
        {
            get
            {
                return this.SessionUserField;
            }
            set
            {
                this.SessionUserField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Users.IUsersManagementService")]
    public interface IUsersManagementService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/RecordLogoutTimeStamp", ReplyAction="http://tempuri.org/IUsersManagementService/RecordLogoutTimeStampResponse")]
        System.Threading.Tasks.Task RecordLogoutTimeStampAsync(int sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/GetUserLoginHistory", ReplyAction="http://tempuri.org/IUsersManagementService/GetUserLoginHistoryResponse")]
        System.Threading.Tasks.Task<Users.UserLoginHistory[]> GetUserLoginHistoryAsync(Users.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/ValidateCredentials", ReplyAction="http://tempuri.org/IUsersManagementService/ValidateCredentialsResponse")]
        System.Threading.Tasks.Task<bool> ValidateCredentialsAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/GetUser", ReplyAction="http://tempuri.org/IUsersManagementService/GetUserResponse")]
        System.Threading.Tasks.Task<Users.UserSession> GetUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/GetUsers", ReplyAction="http://tempuri.org/IUsersManagementService/GetUsersResponse")]
        System.Threading.Tasks.Task<Users.User[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/AddUser", ReplyAction="http://tempuri.org/IUsersManagementService/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(Users.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/DeleteUser", ReplyAction="http://tempuri.org/IUsersManagementService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/UpdateUser", ReplyAction="http://tempuri.org/IUsersManagementService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(Users.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface IUsersManagementServiceChannel : Users.IUsersManagementService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class UsersManagementServiceClient : System.ServiceModel.ClientBase<Users.IUsersManagementService>, Users.IUsersManagementService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public UsersManagementServiceClient() : 
                base(UsersManagementServiceClient.GetDefaultBinding(), UsersManagementServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IUsersManagementService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsersManagementServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(UsersManagementServiceClient.GetBindingForEndpoint(endpointConfiguration), UsersManagementServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsersManagementServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(UsersManagementServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsersManagementServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(UsersManagementServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsersManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task RecordLogoutTimeStampAsync(int sessionId)
        {
            return base.Channel.RecordLogoutTimeStampAsync(sessionId);
        }
        
        public System.Threading.Tasks.Task<Users.UserLoginHistory[]> GetUserLoginHistoryAsync(Users.User user)
        {
            return base.Channel.GetUserLoginHistoryAsync(user);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateCredentialsAsync(string username, string password)
        {
            return base.Channel.ValidateCredentialsAsync(username, password);
        }
        
        public System.Threading.Tasks.Task<Users.UserSession> GetUserAsync(string username)
        {
            return base.Channel.GetUserAsync(username);
        }
        
        public System.Threading.Tasks.Task<Users.User[]> GetUsersAsync()
        {
            return base.Channel.GetUsersAsync();
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(Users.User user)
        {
            return base.Channel.AddUserAsync(user);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(string login)
        {
            return base.Channel.DeleteUserAsync(login);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(Users.User user)
        {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUsersManagementService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUsersManagementService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:57412/UsersManagementService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return UsersManagementServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IUsersManagementService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return UsersManagementServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IUsersManagementService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IUsersManagementService,
        }
    }
}
