<UserControl
    x:Class="DataCollector.Client.UI.Views.Dialogs.UserInputDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:DataCollector.Client.UI.Converters"
    xmlns:extensions="clr-namespace:DataCollector.Client.UI.Extensions"
    xmlns:validation="clr-namespace:DataCollector.Client.UI.ValidationRules"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
    xmlns:lexEx="http://wpflocalizeextension.codeplex.com"
    xmlns:lex ="clr-namespace:WPFLocalizeExtension.Engine;assembly=WPFLocalizeExtension"
    lex:LocalizeDictionary.DesignCulture="en"
    lex:LocalizeDictionary.OutputMissingKeys="True"
    lexEx:ResxLocalizationProvider.DefaultAssembly="DataCollector.Client.Translation"
    lexEx:ResxLocalizationProvider.DefaultDictionary="Strings"
    lex:LocalizeDictionary.IncludeInvariantCulture="True"
    Width="250"
    FontFamily="{StaticResource DefaultFont}"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}">
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid.Resources>
            <converters:IsNullToVisiblityConverter x:Key="IsNullToVisiblityConverter" />
            <converters:EnumToStringDescription x:Key="EnumToDescriptionConverter" />
        </Grid.Resources>

        <GroupBox
            Grid.Row="0"
            Margin="10,10,10,0"
            Style="{DynamicResource MaterialDesignCardGroupBox}"
            Header="{lexEx:Loc Key=User}">
            <GroupBox.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <wpf:PackIcon Kind="AccountBox" />
                        <TextBlock
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            Style="{StaticResource MaterialDesignSubheadingTextBlock}"
                            Text="{Binding}" />
                    </StackPanel>
                </DataTemplate>
            </GroupBox.HeaderTemplate>

            <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Center">

                <TextBox x:Name="tbLogin" wpf:HintAssist.Hint="{lexEx:Loc Key=Login}">
                    <Binding Path="Login" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:NotEmptyValidationRule MinLength="5" ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <ComboBox
                    x:Name="cbRoles"
                    wpf:HintAssist.Hint="{lexEx:Loc Key=Roles}"
                    ItemsSource="{Binding AvailableRoles}">
                    <ComboBox.SelectedValue>
                        <Binding Path="Role" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedValue>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumToDescriptionConverter}}" TextWrapping="Wrap" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <PasswordBox
                    x:Name="tbPassword"
                    extensions:PasswordBoxHelper.BindPassword="True"
                    wpf:HintAssist.Hint="{lexEx:Loc Key=Password}">
                    <extensions:PasswordBoxHelper.BoundPassword>
                        <Binding
                            Mode="TwoWay"
                            Path="Password"
                            UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:NotEmptyValidationRule MinLength="5" ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </extensions:PasswordBoxHelper.BoundPassword>
                </PasswordBox>
                <TextBox wpf:HintAssist.Hint="{lexEx:Loc Key=FirstName}">
                    <Binding Path="FirstName" UpdateSourceTrigger="PropertyChanged" />
                </TextBox>
                <TextBox wpf:HintAssist.Hint="{lexEx:Loc Key=LastName}">
                    <Binding Path="LastName" UpdateSourceTrigger="PropertyChanged" />
                </TextBox>
            </StackPanel>
        </GroupBox>

        <StackPanel
            Grid.Row="1"
            Margin="10"
            HorizontalAlignment="Right"
            Orientation="Horizontal">

            <StackPanel.Resources>
                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                    <Setter Property="Command" Value="{x:Static wpf:DialogHost.CloseDialogCommand}" />
                </Style>
            </StackPanel.Resources>

            <Button
                Margin="10"
                CommandParameter="{Binding}"
                IsDefault="True">
                <wpf:PackIcon Kind="Check" />
                <Button.Resources>
                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=tbLogin, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=cbRoles, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=tbPassword, Path=(Validation.HasError)}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>

            <Button Margin="10" IsCancel="True">
                <wpf:PackIcon Kind="Close" />
            </Button>
        </StackPanel>

    </Grid>
</UserControl>
