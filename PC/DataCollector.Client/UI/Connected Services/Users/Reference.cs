//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataCollector.Client.UI.Users {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseTable", Namespace="http://schemas.datacontract.org/2004/07/DataCollector.Server.DataAccess.Models.En" +
        "tities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DataCollector.Client.UI.Users.UserLoginHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DataCollector.Client.UI.Users.User))]
    public partial class BaseTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLoginHistory", Namespace="http://schemas.datacontract.org/2004/07/DataCollector.Server.DataAccess.Models.En" +
        "tities")]
    [System.SerializableAttribute()]
    public partial class UserLoginHistory : DataCollector.Client.UI.Users.BaseTable {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LoginTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LogoutTimeStampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LoginTimeStamp {
            get {
                return this.LoginTimeStampField;
            }
            set {
                if ((this.LoginTimeStampField.Equals(value) != true)) {
                    this.LoginTimeStampField = value;
                    this.RaisePropertyChanged("LoginTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LogoutTimeStamp {
            get {
                return this.LogoutTimeStampField;
            }
            set {
                if ((this.LogoutTimeStampField.Equals(value) != true)) {
                    this.LogoutTimeStampField = value;
                    this.RaisePropertyChanged("LogoutTimeStamp");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DataCollector.Server.DataAccess.Models.En" +
        "tities")]
    [System.SerializableAttribute()]
    public partial class User : DataCollector.Client.UI.Users.BaseTable {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DataCollector.Client.UI.Users.UserRole RoleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DataCollector.Client.UI.Users.UserRole Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/DataCollector.Server.DataAccess.Models")]
    public enum UserRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Administrator = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Viewer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSession", Namespace="http://schemas.datacontract.org/2004/07/DataCollector.Server.DataAccess.Models")]
    [System.SerializableAttribute()]
    public partial class UserSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DataCollector.Client.UI.Users.User SessionUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DataCollector.Client.UI.Users.User SessionUser {
            get {
                return this.SessionUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionUserField, value) != true)) {
                    this.SessionUserField = value;
                    this.RaisePropertyChanged("SessionUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Users.IUsersManagementService")]
    public interface IUsersManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/RecordLogoutTimeStamp", ReplyAction="http://tempuri.org/IUsersManagementService/RecordLogoutTimeStampResponse")]
        void RecordLogoutTimeStamp(int sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/RecordLogoutTimeStamp", ReplyAction="http://tempuri.org/IUsersManagementService/RecordLogoutTimeStampResponse")]
        System.Threading.Tasks.Task RecordLogoutTimeStampAsync(int sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/GetUserLoginHistory", ReplyAction="http://tempuri.org/IUsersManagementService/GetUserLoginHistoryResponse")]
        DataCollector.Client.UI.Users.UserLoginHistory[] GetUserLoginHistory(DataCollector.Client.UI.Users.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/GetUserLoginHistory", ReplyAction="http://tempuri.org/IUsersManagementService/GetUserLoginHistoryResponse")]
        System.Threading.Tasks.Task<DataCollector.Client.UI.Users.UserLoginHistory[]> GetUserLoginHistoryAsync(DataCollector.Client.UI.Users.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/ValidateCredentials", ReplyAction="http://tempuri.org/IUsersManagementService/ValidateCredentialsResponse")]
        bool ValidateCredentials(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/ValidateCredentials", ReplyAction="http://tempuri.org/IUsersManagementService/ValidateCredentialsResponse")]
        System.Threading.Tasks.Task<bool> ValidateCredentialsAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/GetUser", ReplyAction="http://tempuri.org/IUsersManagementService/GetUserResponse")]
        DataCollector.Client.UI.Users.UserSession GetUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/GetUser", ReplyAction="http://tempuri.org/IUsersManagementService/GetUserResponse")]
        System.Threading.Tasks.Task<DataCollector.Client.UI.Users.UserSession> GetUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/GetUsers", ReplyAction="http://tempuri.org/IUsersManagementService/GetUsersResponse")]
        DataCollector.Client.UI.Users.User[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/GetUsers", ReplyAction="http://tempuri.org/IUsersManagementService/GetUsersResponse")]
        System.Threading.Tasks.Task<DataCollector.Client.UI.Users.User[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/AddUser", ReplyAction="http://tempuri.org/IUsersManagementService/AddUserResponse")]
        bool AddUser(DataCollector.Client.UI.Users.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/AddUser", ReplyAction="http://tempuri.org/IUsersManagementService/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(DataCollector.Client.UI.Users.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/DeleteUser", ReplyAction="http://tempuri.org/IUsersManagementService/DeleteUserResponse")]
        bool DeleteUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/DeleteUser", ReplyAction="http://tempuri.org/IUsersManagementService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/UpdateUser", ReplyAction="http://tempuri.org/IUsersManagementService/UpdateUserResponse")]
        void UpdateUser(DataCollector.Client.UI.Users.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/UpdateUser", ReplyAction="http://tempuri.org/IUsersManagementService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(DataCollector.Client.UI.Users.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsersManagementServiceChannel : DataCollector.Client.UI.Users.IUsersManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsersManagementServiceClient : System.ServiceModel.ClientBase<DataCollector.Client.UI.Users.IUsersManagementService>, DataCollector.Client.UI.Users.IUsersManagementService {
        
        public UsersManagementServiceClient() {
        }
        
        public UsersManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsersManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RecordLogoutTimeStamp(int sessionId) {
            base.Channel.RecordLogoutTimeStamp(sessionId);
        }
        
        public System.Threading.Tasks.Task RecordLogoutTimeStampAsync(int sessionId) {
            return base.Channel.RecordLogoutTimeStampAsync(sessionId);
        }
        
        public DataCollector.Client.UI.Users.UserLoginHistory[] GetUserLoginHistory(DataCollector.Client.UI.Users.User user) {
            return base.Channel.GetUserLoginHistory(user);
        }
        
        public System.Threading.Tasks.Task<DataCollector.Client.UI.Users.UserLoginHistory[]> GetUserLoginHistoryAsync(DataCollector.Client.UI.Users.User user) {
            return base.Channel.GetUserLoginHistoryAsync(user);
        }
        
        public bool ValidateCredentials(string username, string password) {
            return base.Channel.ValidateCredentials(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateCredentialsAsync(string username, string password) {
            return base.Channel.ValidateCredentialsAsync(username, password);
        }
        
        public DataCollector.Client.UI.Users.UserSession GetUser(string username) {
            return base.Channel.GetUser(username);
        }
        
        public System.Threading.Tasks.Task<DataCollector.Client.UI.Users.UserSession> GetUserAsync(string username) {
            return base.Channel.GetUserAsync(username);
        }
        
        public DataCollector.Client.UI.Users.User[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<DataCollector.Client.UI.Users.User[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public bool AddUser(DataCollector.Client.UI.Users.User user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(DataCollector.Client.UI.Users.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public bool DeleteUser(string login) {
            return base.Channel.DeleteUser(login);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(string login) {
            return base.Channel.DeleteUserAsync(login);
        }
        
        public void UpdateUser(DataCollector.Client.UI.Users.User user) {
            base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(DataCollector.Client.UI.Users.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
    }
}
